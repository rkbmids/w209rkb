/* global d3, crossfilter, timeSeriesChart, barChart */

// 2015-05-01 00:43:28
//var dateFmt = d3.timeParse("%Y-%m-%d %H:%M:%S");

//Commenting these out for now but keeping as reference for later.
//var chartTimeline = timeSeriesChart()
//  .width(1000)
//  .x(function (d) { return d.key;})
//  .y(function (d) { return d.value;});
//var barChartGate = barChart()
//  .width(600)
//  .x(function (d) { return d.key;})
//  .y(function (d) { return d.value;});
//var barChartCar = barChart()
//  .x(function (d) { return d.key;})
//  .y(function (d) { return d.value;});

//Placeholder for color chart
width = 600
var colorChart = colorChart()
  .width(width)
  .x(function(d){ return d.key;})
  .y(function(d){ return d.value;})

d3.csv("data/lego_sample.csv",
  function (d) {
    // This function is applied to each row of the dataset
  //  d.Timestamp = dateFmt(d.Timestamp);
  //  return d;
  },
  function (err, data) {
    if (err) throw err;

    var csData = crossfilter(data);

    // We create dimensions for each attribute we want to filter by
    csData.dimYear = csData.dimension(function (d) { return d["year"]; });
    csData.dimTheme = csData.dimension(function (d) { return d["theme_name"]; });
    csData.dimColor = csData.dimension(function (d) { return d["color_rgb"]; });

    // We bin each dimension
    csData.years = csData.dimYear.group();
    csData.themes = csData.dimTheme.group();
    csData.colors = csData.dimColor.group();

//Commenting these out for now but we will want to implement something similar later.
//    chartTimeline.onBrushed(function (selected) {
//      csData.dimTime.filter(selected);
//      update();
//    });

//    barChartCar.onMouseOver(function (d) {
  //    csData.dimCarType.filter(d.key);
  //    update();
//    }).onMouseOut(function () {
      // Clear the filter
  //    csData.dimCarType.filterAll();
  //    update();
  //  });

  //  barChartGate.onMouseOver(function (d) {
  //    csData.dimGateName.filter(d.key);
  //    update();
  //  }).onMouseOut(function () {
      // Clear the filter
//      csData.dimGateName.filterAll();
//      update();
//    });

    function update() {
      d3.select("#colorChart")
        .datum(csData.)

      d3.select("#timeline")
        .datum(csData.timesByHour.all())
        .call(chartTimeline);

      d3.select("#carTypes")
        .datum(csData.carTypes.all())
        .call(barChartCar);

      d3.select("#gates")
        .datum(csData.gateNames.all())
        .call(barChartGate)
        .select(".x.axis") //Adjusting the tick labels after drawn
        .selectAll(".tick text")
        .attr("transform", "translate(-8,-1) rotate(-45)");

    }

    update();


  }
);
